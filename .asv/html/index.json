{"project": "shutterbug", "project_url": "#", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"61": "ed2512b3ec4867cd7d945dc7c332c8fdde4280f8", "62": "a360c50cda7539897f58536d897326c93a179764"}, "revision_to_date": {"61": 1629054635000, "62": 1629074628000}, "params": {"arch": ["AMD64"], "cpu": ["AMD Ryzen 5 3400G @ 3.7Ghz (8 cores)"], "machine": ["Hypatia"], "num_cpu": ["8"], "os": ["Windows 10"], "ram": ["16GB"], "python": ["3.9"], "branch": ["HEAD"]}, "graph_param_list": [{"arch": "AMD64", "cpu": "AMD Ryzen 5 3400G @ 3.7Ghz (8 cores)", "machine": "Hypatia", "num_cpu": "8", "os": "Windows 10", "ram": "16GB", "python": "3.9", "branch": "HEAD"}], "benchmarks": {"bench_sanitize.PeakMemSuite.peakmem_check_and_coerce": {"code": "class PeakMemSuite:\n    def peakmem_check_and_coerce(self):\n        raw = self.raw\n        raw.map(sanitize.check_and_coerce_dataarray)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_check_and_coerce", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "50a845b16d5c98d43ab66ca719e6a7b52ee9719d7488d76cba12813bfeec308d"}, "bench_sanitize.PeakMemSuite.peakmem_clean_data": {"code": "class PeakMemSuite:\n    def peakmem_clean_data(self):\n        raw = self.raw_with_time\n        raw.pipe(sanitize.clean_data, [\"star\", \"x\", \"y\", \"jd\", \"time\"])\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_clean_data", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "336775b280bb661dfa19fd53db3e6798a7675a9a308a6c1a9c19003530cdc25d"}, "bench_sanitize.PeakMemSuite.peakmem_clean_header": {"code": "class PeakMemSuite:\n    def peakmem_clean_header(self):\n        for header in list(self.raw.variables.keys()):\n            sanitize.clean_header(header)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_clean_header", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "321b8aaf514790b83f86fefdc1617a820d47ce40b49fc95b7785e2fcae589386"}, "bench_sanitize.PeakMemSuite.peakmem_clean_names": {"code": "class PeakMemSuite:\n    def peakmem_clean_names(self):\n        raw = self.raw\n        raw.pipe(sanitize.clean_names)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_clean_names", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "658532d32cf0c27cc4dfc284d5475e13a35dabf07e5346d4836718137a2c70af"}, "bench_sanitize.PeakMemSuite.peakmem_drop_and_clean_names": {"code": "class PeakMemSuite:\n    def peakmem_drop_and_clean_names(self):\n        raw = self.raw\n        raw.pipe(\n            sanitize.drop_and_clean_names,\n            [\"obj\", \"name\", \"mag\", \"error\", \"x\", \"y\", \"jd\"],\n        )\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_drop_and_clean_names", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "a8f0f20a2a14b58725ecb8d344e5050996f706f0640b5c6d1fa15df1e807df9a"}, "bench_sanitize.PeakMemSuite.peakmem_drop_duplicate_time": {"code": "class PeakMemSuite:\n    def peakmem_drop_duplicate_time(self):\n        raw = self.raw_with_time\n        raw.pipe(sanitize.drop_duplicate_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_drop_duplicate_time", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "89cf25225bbda6d7bf00ff79b42877b2ddc938327b031d911e0497950f0846e7"}, "bench_sanitize.PeakMemSuite.peakmem_find_nan_stars": {"code": "class PeakMemSuite:\n    def peakmem_find_nan_stars(self):\n        sanitize.find_nan_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_find_nan_stars", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "71684e723fe70fad2126fdef337bdc4201b22d97638b179c034c734b617ee9f7"}, "bench_sanitize.PeakMemSuite.peakmem_find_wrong_count_time": {"code": "class PeakMemSuite:\n    def peakmem_find_wrong_count_time(self):\n        sanitize.find_wrong_count_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_find_wrong_count_time", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "a9a0ae74e3f57154ce1062563610e20b7437a529f79726924984c1a01e99aaaa"}, "bench_sanitize.PeakMemSuite.peakmem_remove_incomplete_stars": {"code": "class PeakMemSuite:\n    def peakmem_remove_incomplete_stars(self):\n        sanitize.remove_incomplete_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_remove_incomplete_stars", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "34bfe58ac58f83fc00033261bc1de47263f6d1cba9e8df62af2e361c42cb5d96"}, "bench_sanitize.PeakMemSuite.peakmem_remove_incomplete_time": {"code": "class PeakMemSuite:\n    def peakmem_remove_incomplete_time(self):\n        sanitize.remove_incomplete_time(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "name": "bench_sanitize.PeakMemSuite.peakmem_remove_incomplete_time", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "8d35b245fbb5c267553333f24eebea335ca79d2535acb90ba69fd8b6fcf2897a"}, "bench_sanitize.TimeSuite.time_check_and_coerce": {"code": "class TimeSuite:\n    def time_check_and_coerce(self):\n        raw = self.raw\n        raw.map(sanitize.check_and_coerce_dataarray)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_check_and_coerce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "2eb7e6c96de98ce12f4c3337e5d9a1fbcd3f7b9564697dbaa841244ac9366a43", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_clean_data": {"code": "class TimeSuite:\n    def time_clean_data(self):\n        raw = self.raw_with_time\n        raw.pipe(sanitize.clean_data, [\"star\", \"x\", \"y\", \"jd\", \"time\"])\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_clean_data", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1c83d707538c6be5861ffe7a09d400896010fa698ae03bef553bd2d217514dbe", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_clean_header": {"code": "class TimeSuite:\n    def time_clean_header(self):\n        for header in list(self.raw.variables.keys()):\n            sanitize.clean_header(header)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_clean_header", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "105dba6e473669c90cf28dbe8206e51f0dafb820f9873e2707cf04ed0de0187a", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_clean_names": {"code": "class TimeSuite:\n    def time_clean_names(self):\n        raw = self.raw\n        raw.pipe(sanitize.clean_names)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_clean_names", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3deabd3057d2fda3b464e45667f958993657e12d5fc9ba8aa365723745bc73dd", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_drop_and_clean_names": {"code": "class TimeSuite:\n    def time_drop_and_clean_names(self):\n        raw = self.raw\n        raw.pipe(\n            sanitize.drop_and_clean_names,\n            [\"obj\", \"name\", \"mag\", \"error\", \"x\", \"y\", \"jd\"],\n        )\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_drop_and_clean_names", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d7795f6ddc1a4b51a5a31308b4c3cf0003d81a071224049fe7094e922ebc0b00", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_drop_duplicate_time": {"code": "class TimeSuite:\n    def time_drop_duplicate_time(self):\n        raw = self.raw_with_time\n        raw.pipe(sanitize.drop_duplicate_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_drop_duplicate_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7fe75555fd9f90446a594187bd01c239266fd24c33a6687d9637256aeffd98d7", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_find_nan_stars": {"code": "class TimeSuite:\n    def time_find_nan_stars(self):\n        sanitize.find_nan_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_find_nan_stars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1039341cf7a4d98205008e494d177d7098010622e6d5d45b5fe8a9e5371d1ef6", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_find_wrong_count_star": {"code": "class TimeSuite:\n    def time_find_wrong_count_star(self):\n        sanitize.find_wrong_count_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_find_wrong_count_star", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d5f40b383daa81318481ed837fbda61e48cc413d71f3c5345202bfc86b397cd1", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_find_wrong_count_time": {"code": "class TimeSuite:\n    def time_find_wrong_count_time(self):\n        sanitize.find_wrong_count_time(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_find_wrong_count_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "31351924933b33ddfe6c41a0f26c823dea90d683bdee1dffb6198260905831e2", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_all_stars": {"code": "class TimeSuite:\n    def time_remove_all_stars(\n        self,\n    ):\n        self.raw_with_time.pipe(sanitize.remove_stars, self.raw_with_time.star.values)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_all_stars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5768eb7527154bfdddee61aecdae1cfe2055583532f2480a9107ca756ab150ec", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_all_time": {"code": "class TimeSuite:\n    def time_remove_all_time(\n        self,\n    ):\n        self.raw_with_time.pipe(sanitize.remove_time, self.raw_with_time.time.values)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_all_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "da341b8b3361c55c0e4ad2decad2ed46dfd351d47e6d4aacc06af585969a5b3d", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_incomplete_stars": {"code": "class TimeSuite:\n    def time_remove_incomplete_stars(self):\n        sanitize.remove_incomplete_stars(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_incomplete_stars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "43daf1f0b2073aa55028769987917c0371777d43d97883e37ff35c5294c04f43", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_incomplete_time": {"code": "class TimeSuite:\n    def time_remove_incomplete_time(self):\n        sanitize.remove_incomplete_time(self.raw_with_time)\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_incomplete_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a324041c30b5a0a4577326bbae905b4b14d21c732166aa2ff5c0ccdb35eb47c1", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_some_stars": {"code": "class TimeSuite:\n    def time_remove_some_stars(\n        self,\n    ):\n        self.raw_with_time.pipe(\n            sanitize.remove_stars, self.raw_with_time.star.values[:3]\n        )\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_some_stars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a585c38d7c4e700d327c006fb9521a15e212ab275adbfcfbb62ff1b88c721f70", "warmup_time": -1}, "bench_sanitize.TimeSuite.time_remove_some_time": {"code": "class TimeSuite:\n    def time_remove_some_time(\n        self,\n    ):\n        self.raw_with_time.pipe(\n            sanitize.remove_time, self.raw_with_time.time.values[:3]\n        )\n\nclass SanitizeSuite:\n    def setup(self):\n        self.raw = bf.Data().raw\n        self._clean_raw()", "min_run_count": 2, "name": "bench_sanitize.TimeSuite.time_remove_some_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "48b90208dfb062a8de70677cb95e69842262be4131695494bf5901b3f330d38e", "warmup_time": -1}}, "machines": {"Hypatia": {"arch": "AMD64", "cpu": "AMD Ryzen 5 3400G @ 3.7Ghz (8 cores)", "machine": "Hypatia", "num_cpu": "8", "os": "Windows 10", "ram": "16GB", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}